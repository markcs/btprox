<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dontLock" xml:space="preserve">
    <value>Не блокировать (только запуск команды)</value>
  </data>
  <data name="exitButton" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="hideButton" xml:space="preserve">
    <value>Свернуть</value>
  </data>
  <data name="labelArguments" xml:space="preserve">
    <value>Параметры:</value>
  </data>
  <data name="labelLockCommand" xml:space="preserve">
    <value>Команда при блокировании:</value>
  </data>
  <data name="labelMinutes" xml:space="preserve">
    <value>минут</value>
  </data>
  <data name="labelReleaseCommand" xml:space="preserve">
    <value>Команда при разблокировании</value>
  </data>
  <data name="labelTimeout" xml:space="preserve">
    <value>Заблокировать через:</value>
  </data>
  <data name="labelUnknown" xml:space="preserve">
    <value>Не установлено</value>
  </data>
  <data name="labelUsedDevice" xml:space="preserve">
    <value>Устройтство</value>
  </data>
  <data name="languageWarning" xml:space="preserve">
    <value>Чтобы изменения вступили в силу, перезапустите программу.</value>
  </data>
  <data name="menuItemAbortLock" xml:space="preserve">
    <value>Отменить блокирование</value>
  </data>
  <data name="menuItemAbout" xml:space="preserve">
    <value>О программе</value>
  </data>
  <data name="menuItemExit" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="menuItemRestore" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="menuOptions" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="messageAbortedLock" xml:space="preserve">
    <value>Блокирование отменено</value>
  </data>
  <data name="messageDeviceAppeared" xml:space="preserve">
    <value>Устройство появилось</value>
  </data>
  <data name="messageDeviceDisappeared" xml:space="preserve">
    <value>Устройство потеряно</value>
  </data>
  <data name="messageDeviceFound" xml:space="preserve">
    <value>Найдено устройство</value>
  </data>
  <data name="messageDeviceInRange" xml:space="preserve">
    <value>Устройство обнаружено</value>
  </data>
  <data name="messageDeviceInRangeName" xml:space="preserve">
    <value>Найдено устройство {0}</value>
  </data>
  <data name="messageLocking" xml:space="preserve">
    <value>Блокирование компьютера</value>
  </data>
  <data name="messageLockingIn" xml:space="preserve">
    <value>Блокирование компьютера через {0} секунд</value>
  </data>
  <data name="messageMinutesToLock" xml:space="preserve">
    <value>минут до блокирования</value>
  </data>
  <data name="messageSelectDevice" xml:space="preserve">
    <value>Выберите устройство</value>
  </data>
  <data name="messageStarted" xml:space="preserve">
    <value>Запущено</value>
  </data>
  <data name="messageStopped" xml:space="preserve">
    <value>Остановлен</value>
  </data>
  <data name="messageStopping" xml:space="preserve">
    <value>Остановка.</value>
  </data>
  <data name="messageWaitingForDevice" xml:space="preserve">
    <value>Ожидание устройства</value>
  </data>
  <data name="optionLanguage" xml:space="preserve">
    <value>Язык:</value>
  </data>
  <data name="optionScanPeriod" xml:space="preserve">
    <value>Интервал сканирования:</value>
  </data>
  <data name="optionSeconds" xml:space="preserve">
    <value>секунд</value>
  </data>
  <data name="optionSoundEnabled" xml:space="preserve">
    <value>Звуки</value>
  </data>
  <data name="optionsShowBaloons" xml:space="preserve">
    <value>Всплывающие подсказки</value>
  </data>
  <data name="optionTabText" xml:space="preserve">
    <value>Общее</value>
  </data>
  <data name="startButton" xml:space="preserve">
    <value>Запуск</value>
  </data>
  <data name="stopButton" xml:space="preserve">
    <value>Стоп</value>
  </data>
  <data name="textAbout" xml:space="preserve">
    <value>The program locks the workstation when connected bluetooth device disappears for specified time. 32feet.NET library is used for devices discovery: http://inthehand.com/content/32feet.aspx. Icons from http://commons.wikimedia.org/wiki/Crystal_Clear
Used command line analyzer from http://www.codeproject.com/KB/recipes/command_line.aspx</value>
  </data>
  <data name="useWindowsLog" xml:space="preserve">
    <value>Использовать Windows System Log</value>
  </data>
</root>